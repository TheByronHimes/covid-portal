version: '3'
services:
  mongodb:
    container_name: db
    image: mongo:latest
    restart: unless-stopped
    env_file:
      - ".env"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${db_username}
      - MONGO_INITDB_ROOT_PASSWORD=${db_password}
    ports:
      - "27017:27017"

  frontend:
    build: ./svcUi/
    container_name: frontend
    command: npm run dev
    volumes: 
      - ./static:/app/static:consistent
      - ./svcUi/assets:/app/assets

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  backend:
    build: .
    links:
      # see if you can delete this
      - mongodb
    container_name: backend
    restart: on-failure
    env_file:
      - ".env"
    environment:
      - db_username=${db_username}
      - db_password=${db_password}
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    ports:
      - "8000:80"
    volumes:
      - .:/app:consistent
      - ./static:/app/static:consistent
    depends_on:
      zookeeper:
        condition: service_started
      mongodb:
        condition: service_started
      frontend:
        condition: service_started
      broker:
        condition: service_healthy